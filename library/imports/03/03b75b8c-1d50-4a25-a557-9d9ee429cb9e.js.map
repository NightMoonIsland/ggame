{"version":3,"sources":["assets\\script\\appStart.js"],"names":["init","cc","tool","viewManager","require","console","log","haha","i","length","array","test","outPut","pushBack","remove","Class","extends","Component","properties","onLoad","initScene","setRoot","node","changeView","testRemove","curView"],"mappings":";;;;;;;;AAAA,SAASA,IAAT,GAAe;AACXC,OAAGC,IAAH,GAAU,EAAV;AACA,QAAIC,cAAcC,QAAQ,aAAR,CAAlB;AACAC,YAAQC,GAAR,CAAY,YAAZ;AACAF,YAAQ,cAAR;AACAH,OAAGC,IAAH,CAAQC,WAAR,GAAsB,IAAIA,WAAJ,EAAtB;AACAF,OAAGC,IAAH,CAAQC,WAAR,CAAoBH,IAApB;AACA;;AAEA,QAAIO,OAAO,EAAX;AACA,SAAIC,IAAE,CAAN,EAAQA,IAAI,CAAZ,EAAcA,GAAd,EAAkB;AACdD,aAAKC,CAAL,IAAUA,CAAV;AACH;AACDH,YAAQC,GAAR,CAAYC,KAAKE,MAAjB;AACA,WAAOF,KAAK,CAAL,CAAP;AACA,SAAIC,IAAE,CAAN,EAAQA,IAAI,CAAZ,EAAcA,GAAd,EAAkB;AACdH,gBAAQC,GAAR,SAAmBC,KAAKC,CAAL,CAAnB;AACH;;AAED,QAAIE,QAAQN,QAAQ,QAAR,CAAZ;AACA,QAAIO,OAAO,IAAID,KAAJ,EAAX;AACAC,SAAKC,MAAL;AACA,SAAIJ,IAAI,CAAR,EAAWA,IAAI,CAAf,EAAkBA,GAAlB,EAAsB;AAClBG,aAAKE,QAAL,CAAcL,IAAI,GAAlB;AACH;AACDG,SAAKC,MAAL;AACAD,SAAKG,MAAL,CAAY,CAAZ;AACAH,SAAKC,MAAL;;AAEA;AACA;AACA;AACH;;AAEDX,GAAGc,KAAH,CAAS;AACLC,aAASf,GAAGgB,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVQ,KAHP;;AAgBL;AACAC,YAAQ,kBAAY;AAChBd,gBAAQC,GAAR,CAAY,kBAAZ;AACAN;AACA,aAAKoB,SAAL;AACH,KArBI;;AAuBLA,eAAW,qBAAW;AAClBnB,WAAGC,IAAH,CAAQC,WAAR,CAAoBkB,OAApB,CAA4B,KAAKC,IAAjC;AACArB,WAAGC,IAAH,CAAQC,WAAR,CAAoBoB,UAApB,CAA+B,YAA/B;AACH,KA1BI;;AA4BLC,gBAAY,sBAAW;AACnBvB,WAAGC,IAAH,CAAQC,WAAR,CAAoBsB,OAApB;AACH;;AA9BI,CAAT","file":"unknown","sourcesContent":["function init(){\r\n    cc.tool = {}\r\n    var viewManager = require(\"viewManager\");\r\n    console.log(\"wocao nima\");\r\n    require(\"viewRegister\");\r\n    cc.tool.viewManager = new viewManager();\r\n    cc.tool.viewManager.init();\r\n    // cc.tool.viewManager.registView(\"hahaha\", \"hehehe\", \"hihihi\");\r\n\r\n    var haha = [];\r\n    for(i=0;i < 5;i++){\r\n        haha[i] = i;\r\n    }\r\n    console.log(haha.length)\r\n    delete haha[2];\r\n    for(i=0;i < 5;i++){\r\n        console.log(typeof haha[i]);\r\n    }\r\n\r\n    var array = require(\"array1\");\r\n    var test = new array();\r\n    test.outPut();\r\n    for(i = 0; i < 5; i++){\r\n        test.pushBack(i + 100)\r\n    }\r\n    test.outPut();\r\n    test.remove(2);\r\n    test.outPut();\r\n\r\n    // cc.variable = {};\r\n    // var array1 = require(\"array1\");\r\n    // cc.variable.viewList = new array1();\r\n}\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        console.log(\"hahahahhsfassaga\");\r\n        init();\r\n        this.initScene();\r\n    },\r\n\r\n    initScene: function() {\r\n        cc.tool.viewManager.setRoot(this.node);\r\n        cc.tool.viewManager.changeView(\"hahhahahaa\");\r\n    },\r\n\r\n    testRemove: function() {\r\n        cc.tool.viewManager.curView();\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}