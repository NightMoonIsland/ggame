{"version":3,"sources":["assets/script/appStart.js"],"names":["init","cc","tool","viewManager","require","viewRegister","timeHandler","eventManager","gameVariable","Lang","prefab","config","protocolInit","protocolHandler","console","log","tmRes","length","registView","Class","extends","Component","properties","haha","count","onLoad","testFunc","updateTime","sec","str1","helloword","initScene","testRemove","changeView","btnBack","backPreview","connectTest","socket","io","connect","msg","i","on","emit","abc"],"mappings":"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","file":"unknown","sourcesContent":["function init(){\n    cc.tool = {}\n    var viewManager = require(\"viewManager\");\n    cc.tool.viewManager = new viewManager();\n    cc.tool.viewManager.init();\n\n\n    require(\"viewRegister\");\n    viewRegister();\n\n    var timeHandler = require(\"timeHandler\");\n    cc.tool.timeHandler = new timeHandler();\n\n    var eventManager = require(\"eventManager\");\n    cc.tool.eventManager = new eventManager();\n\n    cc.tool.gameVariable = require(\"gameVariable\");\n    cc.tool.Lang = require(\"langZh\");\n\n    cc.tool.prefab = {};\n    // cc.tool.viewManager.registView(\"hahaha\", \"hehehe\", \"hihihi\");\n\n    cc.tool.config = require(\"config\");\n\n    cc.tool.protocolInit = require(\"protocolInit\");\n    cc.tool.protocolHandler = require(\"protocolHandler\");\n    console.log(\"array's length = \" + cc.tool.protocolInit.tmRes.length);\n}\n\nfunction viewRegister(){\n    cc.tool.viewManager.registView(\"kmView\", \"ui/kmView\", 2);\n    cc.tool.viewManager.registView(\"kilie5View\", \"ui/kilie5View\", 2);\n}\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        haha: [],\n        count: 0,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        init();\n\n        // var self = this;\n        // cc.loader.loadRes(\"control/ListView\", cc.Prefab, function(err, prefab){\n        //     // cc.tool.prefab.listView = prefab;\n        //     console.log(\"type prefab = \" + typeof prefab)\n\n        //     var root = cc.instantiate(prefab);\n        //     root.setPosition(cc.v2(0, 0));\n        //     let listView = root.getChildByName(\"view\").getChildByName(\"content\").getComponent(\"ListView\");\n        //     listView.create(cc.tool.config.Direction.HORIZONTAL, 1, 1, 1, 240, 150);\n        //     listView.setItemModel(\"control/Renderer\", 160, 60);\n\n        //     var array = require(\"array1\");\n        //     var test = new array();\n        //     for(i = 0; i < 5; i++){\n        //         test.pushBack(i + 100)\n        //     }\n\n        //     listView.setDataProvider(test);\n\n\n        //     self.node.addChild(root);\n        // });\n\n        //暂时不用定时器\n        // this.schedule(function(){\n        //     this.updateTime();\n        // }, 1);\n\n        this.testFunc();\n    },\n\n    updateTime: function() {\n        console.log(\"this.count = \" + this.count);\n        this.count = this.count + 1;\n        // cc.tool.eventManager.VAR_CHANGE(\"sec1\");\n        cc.tool.gameVariable.sec = cc.tool.gameVariable.sec + 1;\n    },\n\n    testFunc: function() {\n        var str1 = \"helloword\";\n        this.helloword = function(){\n            console.log(\"wotefunck\");\n        }\n        this[str1]();\n    },\n\n    initScene: function() {\n        // cc.tool.viewManager.setRoot(this.node);\n        // cc.tool.viewManager.changeView(\"hahhahahaa\");\n        console.log(\"test type\" + typeof this.haha[\"wocao\"]);\n    },\n\n    testRemove: function() {\n        cc.tool.viewManager.changeView(\"kmView\");\n    },\n\n    btnBack: function() {\n        cc.tool.viewManager.backPreview();\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n\n    connectTest: function() {\n        console.log(\"work connect\");\n        var socket = io.connect('10.10.30.234:12345', function(msg){\n            console.log(msg);\n        });\n        for(var i = 0; i < cc.tool.protocolInit.tmRes.length; i++){\n            socket.on(cc.tool.protocolInit.tmRes[i], cc.tool.protocolHandler[cc.tool.protocolInit.tmRes[i]]);\n        }\n        socket.emit('hehehaha', {abc:\"wozhenderilegoule\"});\n    },\n});\n"]}