{"version":3,"sources":["assets/script/process/timeHandler.js"],"names":["timerCount","cc","Class","extends","Component","properties","self","ctor","init","updateTimer","console","log","startTimer","schedule","stopTimer","unschedule","dosomething"],"mappings":";;;;;;AAAA,IAAIA,aAAa,CAAjB;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAAML,GAAGG,SAXD,EAHP;;AAiBL;;AAEAG,UAAM,gBAAW,CAChB,CApBI;;AAsBLC,UAAM,cAASF,IAAT,EAAe;AACjB,aAAKA,IAAL,GAAYA,IAAZ;AACH,KAxBI;;AA0BLG,iBAAa,uBAAW;AACpBT,qBAAaA,aAAa,CAA1B;AACAU,gBAAQC,GAAR,CAAY,OAAZ;AACAD,gBAAQC,GAAR,CAAY,iBAAiBX,UAA7B;AACH,KA9BI;;AAgCLY,gBAAY,sBAAU;AAClBZ,qBAAa,CAAb;AACA,aAAKM,IAAL,CAAUO,QAAV,CAAmB,KAAKJ,WAAxB,EAAqC,CAArC;AACH,KAnCI;;AAqCLK,eAAW,qBAAU;AACjBd,qBAAa,CAAb;AACAU,gBAAQC,GAAR,CAAY,MAAZ;AACA,aAAKL,IAAL,CAAUS,UAAV,CAAqB,KAAKN,WAA1B;AACH,KAzCI;;AA2CLO,iBAAa,uBAAU;AACnBN,gBAAQC,GAAR,CAAY,cAAZ;AACA;AACA;AACH;AA/CI,CAAT","file":"unknown","sourcesContent":["var timerCount = 0;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        self: cc.Component, //用挂载在scene上的脚本作为计时器\n    },\n\n    // use this for initialization\n\n    ctor: function() {\n    },\n\n    init: function(self) {\n        this.self = self;\n    },\n\n    updateTimer: function() {\n        timerCount = timerCount + 1;\n        console.log(\"wo ca\");\n        console.log(\"test Work = \" + timerCount);\n    },\n\n    startTimer: function(){\n        timerCount = 0;\n        this.self.schedule(this.updateTimer, 1);\n    },\n\n    stopTimer: function(){\n        timerCount = 0;\n        console.log(\"停下!!\");\n        this.self.unschedule(this.updateTimer);\n    },\n\n    dosomething: function(){\n        console.log(\"dsgfsdagvdga\");\n        // console.log(\"this.count = \" + this.count);\n        // this.count = this.count + 1;\n    },\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}