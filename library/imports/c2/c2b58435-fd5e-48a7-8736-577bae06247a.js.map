{"version":3,"sources":["assets/script/tool/viewManager.js"],"names":["cc","Class","properties","viewList","viewInfo","view","viewName","ctor","console","log","array1","require","status","pushBack","a","b","setRoot","node","root","onLoad","init","registView","module","title","changeView","empty","back","viewAbout","idx","find","npos","len","getSize","remove","self","loader","loadRes","err","prefab","instantiate","director","getScene","getChildByName","addChild","removeFromParent","destroy","curView","tool","eventManager","addEventListener","testAddChild","testWorkListener","releaseRes","varName","curViewName","backPreview","popBack"],"mappings":"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","file":"unknown","sourcesContent":["\n\ncc.Class({\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        viewList: null,\n        viewInfo: [],\n        view: null,\n        viewName: null,\n    },\n\n    ctor: function() {\n        console.log(\"hhhehehe\");\n        var array1 = require(\"array1\");\n        this.viewList = new array1();\n        // this.array1 = new require(\"array1\");\n        this.viewList.status();\n        this.viewList.pushBack({a:1, b:2});\n        this.viewList.status();\n        \n    },\n\n    setRoot: function(node) {\n        this.root = node;\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        // console.log(\"hahahahha\");\n\n        // cc.variable.viewInfo.asfdfsdf();\n        // console.log(typeof this.viewName);\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n\n    init: function(){\n        this.viewInfo = [];\n    },\n\n    registView: function(viewName, module, title){\n        this.viewInfo[viewName] = {viewName:viewName, module:module, title:title};\n    },\n\n    changeView: function(viewName){\n        if(!this.viewList.empty() && this.viewList.back() == viewName){\n            console.log(\"view is same\");\n            return this.view;\n        }\n\n        var viewAbout = this.viewInfo[viewName]\n\n        var idx = this.viewList.find(viewName);\n        if(idx != this.viewList.npos){\n            var len = this.viewList.getSize() - idx;\n            this.viewList.remove(idx + 1, len - 1);\n        }\n        else{\n            this.viewList.pushBack(viewName);\n        }\n        console.log(\"wocao 3\");\n\n        var self = this;\n        //通过链接 加载的资源 必须放在resource下\n        cc.loader.loadRes(viewAbout.module, function(err, prefab){\n            var root = cc.instantiate(prefab);\n            cc.director.getScene().getChildByName(\"Canvas\").addChild(root);\n            if(self.view != null){\n                self.view.removeFromParent();\n                self.view.destroy();\n                self.view = null;\n            }\n            self.view = root;\n        });\n        \n        this.viewName = viewName;\n        return this.view;\n    },\n\n    curView: function() {\n        // this.testAddChild();\n        var self = this;\n        cc.tool.eventManager.addEventListener(\"hahaha\", self, self.testAddChild);\n        cc.tool.eventManager.testWorkListener()\n        this.view.removeFromParent(false);\n        cc.loader.releaseRes(\"prefab/Test1Panel\");\n\n        return this.view;\n    },\n\n    testAddChild: function(varName){\n        if(varName == \"hahaha\"){\n            console.log(\"wocao tamabi\");\n        }\n        else if(varName = \"wocaonima\"){\n            console.log(\"??? wodetian\");\n        }\n    },\n\n    curViewName: function(){\n        return this.viewName;\n    },\n\n    backPreview: function(){\n        if(this.viewList.getSize() > 0){\n            this.viewList.popBack();\n\n            var viewName = this.viewList.back();\n            var viewAbout = this.viewInfo[viewName];\n            if(viewAbout == null){\n                if(this.view != null){\n                    this.view.removeFromParent();\n                    this.view.destroy();\n                    this.view = null;\n                }\n                this.viewName = null;\n                return null;\n            }\n\n            var self = this;\n            cc.loader.loadRes(viewAbout.module, function(err, prefab){\n                var root = cc.instantiate(prefab);\n                cc.director.getScene().getChildByName(\"Canvas\").addChild(root);\n                if(self.view != null){\n                    self.view.removeFromParent();\n                    self.view.destroy();\n                    self.view = null;\n                }\n                self.view = root;\n            });\n            this.viewName = viewName;\n            return this.view;\n        }\n        return null;\n    },\n});\n"]}